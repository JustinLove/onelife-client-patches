diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index f59fc0a9..e67b3f44 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -3568,6 +3568,59 @@ LiveObject *LivingLifePage::getLiveObject( int inID ) {
     }
 
 
+void drawHelpInteractionKeys( doublePair messagePos ) {
+    double lineSpacing = 30;
+    double indent = 60;
+    double columnWidth = 400;
+
+    char letters[2];
+    letters[1] = 0;
+
+    messagePos.x += columnWidth/2;
+    mainFont->drawString( "Actions at Cursor", 
+                           messagePos, alignCenter );
+    messagePos.x -= columnWidth/2;
+    messagePos.y -= lineSpacing;
+
+    for( int command = 0; command < IK_COUNT; command++ ) {
+        letters[0] = interactionKeys[command];
+        mainFont->drawString( letters, 
+                               messagePos, alignLeft );
+        messagePos.x += indent;
+        mainFontReview->drawString( interactionKeysHelp[command], 
+                               messagePos, alignLeft );
+        messagePos.x -= indent;
+        messagePos.y -= lineSpacing;
+        }
+    }
+
+
+void drawHelpMarkKeys( doublePair messagePos ) {
+    double lineSpacing = 30;
+    double indent = 60;
+
+    char letters[2];
+    letters[1] = 0;
+
+    letters[0] = playerMarkKey;
+    mainFont->drawString( letters, 
+                           messagePos, alignLeft );
+    messagePos.x += indent;
+    mainFontReview->drawString( "Mark Player", 
+                           messagePos, alignLeft );
+    messagePos.x -= indent;
+    messagePos.y -= lineSpacing;
+
+    letters[0] = playerUnmarkKey;
+    mainFont->drawString( letters, 
+                           messagePos, alignLeft );
+    messagePos.x += indent;
+    mainFontReview->drawString( "Unmark Player", 
+                           messagePos, alignLeft );
+    messagePos.x -= indent;
+    messagePos.y -= lineSpacing;
+    }
+
 
 SimpleVector<char*> *splitLines( const char *inString,
                                  double inMaxWidth ) {
diff --git a/gameSource/game.cpp b/gameSource/game.cpp
index 4eeada33..e43279f8 100644
--- a/gameSource/game.cpp
+++ b/gameSource/game.cpp
@@ -829,43 +829,86 @@ void freeFrameDrawer() {
 static void drawFrameNoUpdate( char inUpdate );
 
 
+void drawPauseEmotionKeys( doublePair messagePos ) {
+    double lineSpacing = 30;
 
+    char letters[2];
+    letters[1] = 0;
+
+    mainFont->drawString( "Alt+ or Ctrl+",
+                           messagePos, alignCenter );
+    messagePos.y -= lineSpacing;
+
+    Emotion *e = getEmotion(0);
+    for( int index = 0; (e = getEmotion(index)) != NULL && e->triggerWord && index < 200; index++ ) {
+        if( e->triggerKey == 0) continue;
+        letters[0] = e->triggerKey;
+        mainFont->drawString( letters,
+                               messagePos, alignLeft );
+        messagePos.y -= lineSpacing;
+        }
+    }
+
+void drawPauseSayKeys( doublePair messagePos ) {
+    double lineSpacing = 30;
+    double indent = 60;
+
+    mainFont->drawString( "F1", 
+                           messagePos, alignLeft );
+    messagePos.x += indent;
+    mainFontReview->drawString( "Close say without clearing", 
+                           messagePos, alignLeft );
+    messagePos.x -= indent;
+    messagePos.y -= lineSpacing;
+
+    mainFontReview->drawString( "Shift+Backspace  Clear and close say", 
+                           messagePos, alignLeft );
+    messagePos.y -= lineSpacing;
+    }
+
+void drawHelpInteractionKeys( doublePair messagePos );
+void drawHelpMarkKeys( doublePair messagePos );
 
 static void drawPauseScreen() {
 
     double viewHeight = viewHeightFraction * viewWidth;
+    double rectWidth = viewHeight / 3;
+    double rectHeight = viewHeight / 2.2;
 
     setDrawColor( 1, 1, 1, 0.5 * pauseScreenFade );
         
-    drawSquare( lastScreenViewCenter, 1.05 * ( viewHeight / 3 ) );
+    drawRect( lastScreenViewCenter, 1.05 * rectWidth, 1.05 * rectHeight );
         
 
     setDrawColor( 0.2, 0.2, 0.2, 0.85 * pauseScreenFade  );
         
-    drawSquare( lastScreenViewCenter, viewHeight / 3 );
+    drawRect( lastScreenViewCenter, rectWidth, rectHeight );
         
 
     setDrawColor( 1, 1, 1, pauseScreenFade );
 
     doublePair messagePos = lastScreenViewCenter;
 
-    messagePos.y += 4.5  * (viewHeight / 15);
+    messagePos.y += 6.0  * (viewHeight / 15);
 
     mainFont->drawString( translate( "pauseMessage1" ), 
                            messagePos, alignCenter );
         
-    messagePos.y -= 1.25 * (viewHeight / 15);
+    messagePos.y -= 1 * (viewHeight / 15);
     mainFont->drawString( translate( "pauseMessage2" ), 
                            messagePos, alignCenter );
 
 
     if( currentGamePage == livingLifePage ) {
         
-        doublePair drawPos = { -9, 0 };
+        doublePair drawPos = { -220, 140 };
         
         drawPos = add( drawPos, lastScreenViewCenter );
 
-        drawSprite( instructionsSprite, drawPos );
+        //drawSprite( instructionsSprite, drawPos );
+        drawHelpInteractionKeys( drawPos );
+        drawPos.y -= 400;
+        drawHelpMarkKeys( drawPos );
 
         TextAlignment a = getMessageAlign();
 
@@ -894,6 +937,10 @@ static void drawPauseScreen() {
         drawMessage( translate( "commandHintsA" ), drawPos, false, 
                      pauseScreenFade );
 
+        drawPos.x += 200;
+        drawPos.y -= 222;
+        drawPauseEmotionKeys( drawPos );
+
 
 
         drawPos = lastScreenViewCenter;
@@ -918,6 +965,9 @@ static void drawPauseScreen() {
         setMessageAlign( alignLeft );
         drawMessage( translate( "commandHintsB" ), drawPos, false, 
                      pauseScreenFade );
+
+        drawPos.y -= viewHeight * 0.82;
+        drawMessage( "F1  Pause say##Shift+Backspace## Cancel say", drawPos, false, pauseScreenFade );
         
         setMessageAlign( a );
         }
@@ -1125,11 +1175,7 @@ static void drawPauseScreen() {
 
     messagePos = lastScreenViewCenter;
 
-    messagePos.y -= 3.75 * ( viewHeight / 15 );
-    //mainFont->drawString( translate( "pauseMessage3" ), 
-    //                      messagePos, alignCenter );
-
-    messagePos.y -= 0.625 * (viewHeight / 15);
+    messagePos.y += 4 * ( viewHeight / 15 );
 
     const char* quitMessageKey = "pauseMessage3";
     

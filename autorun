diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index 956f8434..f7331c0f 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -108,9 +108,17 @@ static JenkinsRandomSource remapRandSource( 340403 );
 
 static int lastScreenMouseX, lastScreenMouseY;
 static char mouseDown = false;
-static int mouseDownFrames = 0;
+static unsigned int mouseDownFrames = 0;
+static unsigned int mouseClickGap = 0;
+static unsigned int framesSinceAutoRunStart = 0;
+static char mouseHeld = false;
+static char autoRun = false;
+static float previousMouseX = 0;
+static float previousMouseY = 0;
 
-static int minMouseDownFrames = 30;
+static unsigned int minMouseDownFrames = 30;
+static unsigned int maxDoubleClickFrames = 30;
+static int maxDoubleClickDrift = 30;
 
 
 static int screenCenterPlayerOffsetX, screenCenterPlayerOffsetY;
@@ -1712,7 +1720,7 @@ void LivingLifePage::computePathToDest( LiveObject *inObject ) {
             inObject->pathToDest[i].y -= pathOffsetY;
             }
 
-        inObject->shouldDrawPathMarks = false;
+        inObject->shouldDrawPathMarks = autoRun;
         
         // up, down, left, right
         int dirsInPath[4] = { 0, 0, 0, 0 };
@@ -2105,6 +2113,9 @@ LivingLifePage::LivingLifePage()
 
     // set to 0 to disable screen edge push
     screenEdgePushSpeed = SettingsManager::getFloatSetting( "screenEdgePushSpeed", 10 );
+
+    // set to 0 to disable double click to run; you can't click twice in 1 frame
+    maxDoubleClickFrames = SettingsManager::getIntSetting( "maxDoubleClickFrames", 30 );
     
     initLiveTriggers();
 
@@ -9452,8 +9463,13 @@ void LivingLifePage::step() {
         }
     
 
+    mouseClickGap++;
+    framesSinceAutoRunStart++;
     if( mouseDown ) {
         mouseDownFrames++;
+        if ( mouseDownFrames > minMouseDownFrames / frameRateFactor ) {
+            mouseHeld = true;
+            }
         }
     
     if( mServerSocket == -1 ) {
@@ -16345,7 +16361,8 @@ void LivingLifePage::step() {
                 }
             else {
 
-                if( o->id == ourID && mouseDown && shouldMoveCamera ) {
+                if( o->id == ourID && (mouseHeld || autoRun) && shouldMoveCamera ) {
+                    mForceGroundClick = true;
                     float worldMouseX, worldMouseY;
                     
                     screenToWorld( lastScreenMouseX,
@@ -16364,9 +16381,7 @@ void LivingLifePage::step() {
                     // however, if they started by clicking on something
                     // make sure they are really holding the mouse down
                     // (give them time to unpress the mouse)
-                    if( nextActionMessageToSend == NULL ||
-                        mouseDownFrames >  
-                        minMouseDownFrames / frameRateFactor ) {
+                    if( nextActionMessageToSend == NULL ) {
                         
                         double absX = fabs( delta.x );
                         double absY = fabs( delta.y );
@@ -16378,10 +16393,7 @@ void LivingLifePage::step() {
                             
                             if( absX < CELL_D * 4 
                                 &&
-                                absY < CELL_D * 4 
-                                &&
-                                mouseDownFrames >  
-                                minMouseDownFrames / frameRateFactor ) {
+                                absY < CELL_D * 4 ) {
                                 
                                 // they're holding mouse down very close
                                 // to to their character
@@ -16426,6 +16438,7 @@ void LivingLifePage::step() {
                                 }
                             }
                         }
+                    mForceGroundClick = false;
                     }
                 else if( o->id == ourID && o->pathLength >= 2 &&
                          nextActionMessageToSend == NULL &&
@@ -16560,6 +16573,9 @@ void LivingLifePage::step() {
                     //trailColor.g = randSource.getRandomBoundedDouble( 0, .5 );
                     //trailColor.b = randSource.getRandomBoundedDouble( 0, .5 );
                     
+                    if( o->id == ourID ) {
+                        autoRun = false;
+                        }
 
                     if( ( o->id != ourID && 
                           ! o->somePendingMessageIsMoreMovement ) 
@@ -18091,12 +18107,33 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
     // something actionable along the way
     char mouseAlreadyDown = mouseDown;
     
-    mouseDown = true;
+    if ( !mForceGroundClick ) {
+        mouseDown = true;
+    }
+
     if( !mouseAlreadyDown ) {
         mouseDownFrames = 0;
         }
     
+    LiveObject *ourLiveObject = getOurLiveObject();
+
     getLastMouseScreenPos( &lastScreenMouseX, &lastScreenMouseY );
+    if ( !autoRun
+     && !mForceGroundClick
+     && mouseClickGap < maxDoubleClickFrames
+     && ourLiveObject->inMotion
+     && !modClick
+     && abs(previousMouseX - lastScreenMouseX) < maxDoubleClickDrift
+     && abs(previousMouseY - lastScreenMouseY) < maxDoubleClickDrift ) {
+        autoRun = true;
+        framesSinceAutoRunStart = 0;
+        if (ourLiveObject != NULL) {
+            ourLiveObject->shouldDrawPathMarks = autoRun;
+            }
+      }
+    mouseClickGap = 0;
+    previousMouseX = lastScreenMouseX;
+    previousMouseY = lastScreenMouseY;
     
     if( mFirstServerMessagesReceived != 3 || ! mDoneLoadingFirstObjectSet ) {
         return;
@@ -18111,7 +18148,6 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
         }
     
 
-    LiveObject *ourLiveObject = getOurLiveObject();
     
     if( ourLiveObject->holdingID > 0 &&
         getObject( ourLiveObject->holdingID )->speedMult == 0 ) {
@@ -18218,9 +18254,7 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
     int mapY = clickDestY - mMapOffsetY + mMapD / 2;    
     
     
-    if( mouseAlreadyDown && 
-        mouseDownFrames >  
-        minMouseDownFrames / frameRateFactor ) {
+    if( mouseHeld || mForceGroundClick ) {
         
         // continuous movement mode
 
@@ -19460,11 +19494,15 @@ void LivingLifePage::pointerUp( float inX, float inY ) {
         return;
         }
 
-    if( mouseDown && 
-        getOurLiveObject()->inMotion 
-        &&
-        mouseDownFrames >  
-        minMouseDownFrames / frameRateFactor ) {
+    if( autoRun && framesSinceAutoRunStart > maxDoubleClickFrames * 3 &&
+        getOurLiveObject()->inMotion ) {
+
+        autoRun = false;
+        mouseHeld = false;
+        }
+
+    if( mouseHeld &&
+        getOurLiveObject()->inMotion ) {
         
         // treat the up as one final click (at closest next path position
         // to where they currently are)
@@ -19484,6 +19522,7 @@ void LivingLifePage::pointerUp( float inX, float inY ) {
         }
 
     mouseDown = false;
+    mouseHeld = false;
 
 
     // clear mouse over cell
diff --git a/gameSource/settings/maxDoubleClickFrames.ini b/gameSource/settings/maxDoubleClickFrames.ini
new file mode 100644
index 00000000..64bb6b74
--- /dev/null
+++ b/gameSource/settings/maxDoubleClickFrames.ini
@@ -0,0 +1 @@
+30

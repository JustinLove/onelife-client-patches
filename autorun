diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index 6d2c71a7..f1e3d411 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -119,9 +119,17 @@ static JenkinsRandomSource remapRandSource( 340403 );
 
 static int lastScreenMouseX, lastScreenMouseY;
 static char mouseDown = false;
-static int mouseDownFrames = 0;
+static unsigned int mouseDownFrames = 0;
+static unsigned int mouseClickGap = 0;
+static unsigned int framesSinceAutoRunStart = 0;
+static char mouseHeld = false;
+static char autoRun = false;
+static float previousMouseX = 0;
+static float previousMouseY = 0;
 
-static int minMouseDownFrames = 30;
+static unsigned int minMouseDownFrames = 30;
+static unsigned int maxDoubleClickFrames = 30;
+static int maxDoubleClickDrift = 30;
 
 
 static int screenCenterPlayerOffsetX, screenCenterPlayerOffsetY;
@@ -2232,7 +2240,7 @@ void LivingLifePage::computePathToDest( LiveObject *inObject ) {
             inObject->pathToDest[i].y -= pathOffsetY;
             }
 
-        inObject->shouldDrawPathMarks = false;
+        inObject->shouldDrawPathMarks = autoRun;
         
         // up, down, left, right
         int dirsInPath[4] = { 0, 0, 0, 0 };
@@ -2678,6 +2686,9 @@ LivingLifePage::LivingLifePage()
 
     // set to 0 to disable screen edge push
     screenEdgePushSpeed = SettingsManager::getFloatSetting( "screenEdgePushSpeed", 10 );
+
+    // set to 0 to disable double click to run; you can't click twice in 1 frame
+    maxDoubleClickFrames = SettingsManager::getIntSetting( "maxDoubleClickFrames", 30 );
     
     initLiveTriggers();
 
@@ -12153,8 +12164,13 @@ void LivingLifePage::step() {
         }
     
 
+    mouseClickGap++;
+    framesSinceAutoRunStart++;
     if( mouseDown ) {
         mouseDownFrames++;
+        if ( mouseDownFrames > minMouseDownFrames / frameRateFactor ) {
+            mouseHeld = true;
+            }
         }
     
     if( mServerSocket == -1 ) {
@@ -20617,10 +20633,41 @@ void LivingLifePage::step() {
                     }
                 }
             else {
+                bool run = false;
+                bool road = false;
+                if( o->id == ourID && shouldMoveCamera && o->pathLength >= 2 ) {
+                    run = mouseHeld || autoRun;
+                    if( !mouseHeld ) {
+
+                        // reached destination of bare-ground click
+
+                        // check for auto-walk on road
+
+                        GridPos prevStep = o->pathToDest[ o->pathLength - 2 ];
+                        GridPos finalStep = o->pathToDest[ o->pathLength - 1 ];
+
+                        int mapIP = getMapIndex( prevStep.x, prevStep.y );
+                        int mapIF = getMapIndex( finalStep.x, finalStep.y );
+
+                        if( mapIF != -1 && mapIP != -1 ) {
+                            int floor = mMapFloors[ mapIF ];
+
+                            if( floor > 0 && mMapFloors[ mapIP ] == floor &&
+                                getObject( floor )->rideable ) {
+                                    run = false;
+                                    if ( nextActionMessageToSend == NULL &&
+                                         distance( endPos, o->currentPos )
+                                         < o->currentSpeed ) {
+                                        road = true;
+                                    }
+                                }
+                            }
+                        }
+                    }
 
-                if( o->id == ourID && mouseDown && shouldMoveCamera &&
-                    o->pathLength > 2 ) {
+                if( run ) {
                     
+                    mForceGroundClick = true;
                     float worldMouseX, worldMouseY;
                     
                     screenToWorld( lastScreenMouseX,
@@ -20639,9 +20686,7 @@ void LivingLifePage::step() {
                     // however, if they started by clicking on something
                     // make sure they are really holding the mouse down
                     // (give them time to unpress the mouse)
-                    if( nextActionMessageToSend == NULL ||
-                        mouseDownFrames >  
-                        minMouseDownFrames / frameRateFactor ) {
+                    if( nextActionMessageToSend == NULL ) {
                         
                         double absX = fabs( delta.x );
                         double absY = fabs( delta.y );
@@ -20653,10 +20698,7 @@ void LivingLifePage::step() {
                             
                             if( absX < CELL_D * 4 
                                 &&
-                                absY < CELL_D * 4 
-                                &&
-                                mouseDownFrames >  
-                                minMouseDownFrames / frameRateFactor ) {
+                                absY < CELL_D * 4 ) {
                                 
                                 // they're holding mouse down very close
                                 // to to their character
@@ -20690,20 +20732,24 @@ void LivingLifePage::step() {
                                 pointerDown( fakeClick.x, fakeClick.y );
                                 isAutoClick = false;
 
+                                //endPos.x = (double)round( fakeClick.x / CELL_D);
+                                //endPos.y = (double)round( fakeClick.y / CELL_D);
+                               
                                 o->useWaypoint = false;
                                 }
                             else {
                                 isAutoClick = true;
                                 pointerDown( worldMouseX, worldMouseY );
                                 isAutoClick = false;
+
+                                //endPos.x = (double)round( worldMouseX / CELL_D);
+                                //endPos.y = (double)round( worldMouseY / CELL_D);
                                 }
                             }
                         }
+                    mForceGroundClick = false;
                     }
-                else if( o->id == ourID && o->pathLength >= 2 &&
-                         nextActionMessageToSend == NULL &&
-                         distance( endPos, o->currentPos )
-                         < o->currentSpeed ) {
+                else if( road ) {
 
                     // reached destination of bare-ground click
 
@@ -20864,6 +20910,20 @@ void LivingLifePage::step() {
                                 endPos.x = (double)( nextStep.x );
                                 endPos.y = (double)( nextStep.y );
                                 }
+                            else if ( autoRun ) {
+                                mForceGroundClick = true;
+                                float worldMouseX, worldMouseY;
+
+                                screenToWorld( lastScreenMouseX,
+                                               lastScreenMouseY,
+                                               &worldMouseX,
+                                               &worldMouseY );
+
+                                pointerDown( worldMouseX, worldMouseY );
+                                endPos.x = (double)round( worldMouseX / CELL_D);
+                                endPos.y = (double)round( worldMouseY / CELL_D);
+                                mForceGroundClick = false;
+                                }
                             }
                         }
                     }
@@ -20883,6 +20943,9 @@ void LivingLifePage::step() {
                     //trailColor.g = randSource.getRandomBoundedDouble( 0, .5 );
                     //trailColor.b = randSource.getRandomBoundedDouble( 0, .5 );
                     
+                    if( o->id == ourID ) {
+                        autoRun = false;
+                        }
 
                     if( ( o->id != ourID && 
                           ! o->somePendingMessageIsMoreMovement ) 
@@ -22603,12 +22666,33 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
     // something actionable along the way
     char mouseAlreadyDown = mouseDown;
     
-    mouseDown = true;
+    if ( !mForceGroundClick ) {
+        mouseDown = true;
+    }
+
     if( !mouseAlreadyDown ) {
         mouseDownFrames = 0;
         }
     
+    LiveObject *ourLiveObject = getOurLiveObject();
+
     getLastMouseScreenPos( &lastScreenMouseX, &lastScreenMouseY );
+    if ( !autoRun
+     && !mForceGroundClick
+     && mouseClickGap < maxDoubleClickFrames
+     && ourLiveObject->inMotion
+     && !modClick
+     && abs(previousMouseX - lastScreenMouseX) < maxDoubleClickDrift
+     && abs(previousMouseY - lastScreenMouseY) < maxDoubleClickDrift ) {
+        autoRun = true;
+        framesSinceAutoRunStart = 0;
+        if (ourLiveObject != NULL) {
+            ourLiveObject->shouldDrawPathMarks = autoRun;
+            }
+      }
+    mouseClickGap = 0;
+    previousMouseX = lastScreenMouseX;
+    previousMouseY = lastScreenMouseY;
     
     if( mFirstServerMessagesReceived != 3 || ! mDoneLoadingFirstObjectSet ) {
         return;
@@ -22623,7 +22707,6 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
         }
     
 
-    LiveObject *ourLiveObject = getOurLiveObject();
     
     if( ourLiveObject->holdingID > 0 &&
         getObject( ourLiveObject->holdingID )->speedMult == 0 ) {
@@ -22861,9 +22944,7 @@ void LivingLifePage::pointerDown( float inX, float inY ) {
     int mapY = clickDestY - mMapOffsetY + mMapD / 2;    
     
     
-    if( mouseAlreadyDown && 
-        mouseDownFrames >  
-        minMouseDownFrames / frameRateFactor ) {
+    if( mouseHeld || mForceGroundClick ) {
         
         // continuous movement mode
 
@@ -24237,11 +24318,17 @@ void LivingLifePage::pointerUp( float inX, float inY ) {
         return;
         }
 
-    if( mouseDown && 
-        getOurLiveObject()->inMotion 
-        &&
-        mouseDownFrames >  
-        minMouseDownFrames / frameRateFactor ) {
+    if( autoRun &&
+        mForceGroundClick == false &&
+        framesSinceAutoRunStart > maxDoubleClickFrames * 3 &&
+        getOurLiveObject()->inMotion ) {
+
+        autoRun = false;
+        mouseHeld = false;
+        }
+
+    if( mouseHeld &&
+        getOurLiveObject()->inMotion ) {
         
         // treat the up as one final click (at closest next path position
         // to where they currently are)
@@ -24263,6 +24350,7 @@ void LivingLifePage::pointerUp( float inX, float inY ) {
         }
 
     mouseDown = false;
+    mouseHeld = false;
 
 
     // clear mouse over cell
diff --git a/gameSource/settings/maxDoubleClickFrames.ini b/gameSource/settings/maxDoubleClickFrames.ini
new file mode 100644
index 00000000..64bb6b74
--- /dev/null
+++ b/gameSource/settings/maxDoubleClickFrames.ini
@@ -0,0 +1 @@
+30

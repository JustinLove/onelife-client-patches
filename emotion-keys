diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index b688e1bd..729eea35 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -24278,6 +24278,26 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
         return;
         }
 
+    if( isCommandKeyDown() ) {
+        int emotIndex = -1;
+        if( inASCII < 32 ) {
+            emotIndex = getEmotionIndexForKey( inASCII + 96 );
+
+            }
+        else {
+            emotIndex = getEmotionIndexForKey( inASCII );
+            }
+
+        if( emotIndex != -1 ) {
+            char *message = 
+                autoSprintf( "EMOT 0 0 %d#", emotIndex );
+
+            sendToServerSocket( message );
+            delete [] message;
+            return;
+            }
+        }
+
     bool keyHandledByCase = false;
     
     switch( inASCII ) {
diff --git a/gameSource/emotion.cpp b/gameSource/emotion.cpp
index eac38c9a..7ace9750 100644
--- a/gameSource/emotion.cpp
+++ b/gameSource/emotion.cpp
@@ -82,6 +82,38 @@ void initEmotion() {
         }
     delete [] parts;
     
+
+    // now read emotion keys
+
+    cont = SettingsManager::getSettingContents( "emotionKeys", "" );
+
+    if( strcmp( cont, "" ) == 0 ) {
+        delete [] cont;
+        return;
+        }
+
+    parts = split( cont, "\n", &numParts );
+    delete [] cont;
+
+    for( int i=0; i<numParts; i++ ) {
+        if( strcmp( parts[i], "" ) != 0 ) {
+
+            Emotion *e;
+
+            if( i < emotions.size() ) {
+                e = emotions.getElement( i );
+                e->triggerKey = parts[i][0];
+                }
+            else {
+                break;
+                }
+            }
+        delete [] parts[i];
+        }
+    delete [] parts;
+
+
+
     }
 
 
@@ -121,6 +153,22 @@ int getEmotionIndex( const char *inSpeech ) {
 
 
 
+// -1 if no emotion triggered
+int getEmotionIndexForKey( char inKey ) {
+    inKey = tolower( inKey );
+    
+    for( int i=0; i<emotions.size(); i++ ) {
+        
+        if( emotions.getElement(i)->triggerKey == inKey ) {
+            return i;
+            }
+        }
+    
+    return -1;
+    }
+
+
+
 // returns NULL if index out of range
 Emotion *getEmotion( int inIndex ) {
     if( inIndex < 0 || inIndex >= emotions.size() ) {
diff --git a/gameSource/emotion.h b/gameSource/emotion.h
index 7b114e2c..8a24c9bd 100644
--- a/gameSource/emotion.h
+++ b/gameSource/emotion.h
@@ -33,6 +33,8 @@ typedef struct Emotion {
         // drawn on top of everything (like a hat)
         int headEmot;
         
+        char triggerKey;
+        
     } Emotion;
 
 
@@ -48,6 +50,10 @@ void freeEmotion();
 int getEmotionIndex( const char *inSpeech );
 
 
+// -1 if no emotion triggered
+int getEmotionIndexForKey( char inKey );
+
+
 // returns NULL if index out of range
 Emotion *getEmotion( int inIndex );
 
diff --git a/gameSource/settings/emotionKeys.ini b/gameSource/settings/emotionKeys.ini
new file mode 100644
index 00000000..09d13090
--- /dev/null
+++ b/gameSource/settings/emotionKeys.ini
@@ -0,0 +1,16 @@
+h /happy
+m /mad
+a /angry
+s /sad
+d /devious
+j /joy
+b /blush
+
+
+u /hubba
+i /ill
+y /yoohoo
+f /hmph
+l /love
+o /oreally
+k /shock

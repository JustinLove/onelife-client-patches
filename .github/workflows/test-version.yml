name: Test Version

on:
  workflow_dispatch:
    inputs:

jobs:
  test:

    runs-on: ubuntu-latest

    outputs:
      gameClientVersion: ${{ steps.gameClient.outputs.version }}
      patchVersion: ${{ steps.patch.outputs.version }}
      modVersion: ${{ steps.mod.outputs.version }}
      commitish: ${{ steps.commitish.outputs.sha }}
      windowsFile: ${{ steps.windows.outputs.filename }}
      macosxFile: ${{ steps.macosx.outputs.filename }}
      releaseversion: ${{ steps.currentrelease.outputs.name }}


    steps:
      - name: current release
        id: currentrelease
        uses: thebritican/fetch-latest-release@v1
        with:
          github_token: ${{ github.token }}
      - name: checkout onelife
        uses: actions/checkout@v2
        with:
          repository: jasonrohrer/OneLife
          path: OneLife
      - name: Get Game Client Version
        id: gameClient
        run: echo ::set-output name=version::`grep versionNumber OneLife/gameSource/game.cpp | head -1 | sed -e 's/[^0-9]*//g'`
      - name: checkout patches
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: fetch tags
        run: git fetch origin "+refs/tags/*:refs/tags/*"
      - name: get patch version number
        id: patch
        run: echo ::set-output name=version::`git for-each-ref --sort=-authordate --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/v* | sed -e 's/v//'`
      - name: Compose version
        id: mod
        run: echo ::set-output name=version::${{ steps.gameClient.outputs.version}}.${{ steps.patch.outputs.version }}
      - name: Target Commit
        id: commitish
        run: echo ::set-output name=sha::`git log -1 --pretty=format:%H v${{ steps.patch.outputs.version }}`
      - name: report
        run: echo "${{ steps.mod.outputs.version }} ${{ steps.commitish.outputs.name }}"
      - name: Windows filename
        id: windows
        run: echo ::set-output name=filename::WonLife-test-${{ steps.mod.outputs.version}}.zip
      - name: MacOSX filename
        id: macosx
        run: echo ::set-output name=filename::WonLifeMacOSX-test-${{ steps.mod.outputs.version}}.zip

  release:
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: report
        run: echo "${{ needs.test.outputs.releaseversion }}"

diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index 1f13c08e6..d0a0b45ac 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -159,6 +159,8 @@ static double newPlayerMessageTime = 0;
 static char playerMarkKey = '=';
 static char playerUnmarkKey = '-';
 
+static char playerTrackKey = 't';
+
 static int categoryPile = 1600;
 
 static int preferObjectsOverPlayersWithScreenLock = 1;
@@ -2504,6 +2506,26 @@ SimpleVector<char*> knownNames;
 static int tabNameCompletion = 1;
 
 
+LiveObject* livingNameMatch( const char * const inString ) {
+    unsigned int textLength = strlen(inString);
+
+    if( textLength == 0 ) return NULL;
+
+    for( int i=0;i < gameObjects.size(); i++ ) {
+        LiveObject *o = gameObjects.getElement( i );
+        if ( o == NULL || o->name == NULL ) continue;
+        char * name = o->name;
+        unsigned int nameLength = strlen(name);
+        if( textLength >= nameLength && strncmp( inString + (textLength - nameLength), name, nameLength )
+            == 0 ) {
+            return o;
+            }
+        }
+
+    return NULL;
+    }
+
+
 extern char autoAdjustFramerate;
 extern int baseFramesPerSecond;
 
@@ -3459,6 +3481,15 @@ LivingLifePage::LivingLifePage()
         delete [] markKeyString;
         }
 
+    char *trackKeyString = SettingsManager::getStringSetting( "playerTrackKey" );
+
+    if( trackKeyString != NULL ) {
+        if( strlen( trackKeyString ) == 1 ) {
+            playerTrackKey = trackKeyString[0];
+            }
+        delete [] trackKeyString;
+        }
+
     categoryPile = SettingsManager::getIntSetting( "categoryPile", 1600 );
 
     preferObjectsOverPlayersWithScreenLock = SettingsManager::getIntSetting( "preferObjectsOverPlayersWithScreenLock", 1 );
@@ -7427,23 +7458,38 @@ void LivingLifePage::drawLocationSlip( int inIndex ) {
     if ( labeled ) {
         arrowPos.y -= LOCATION_SLIP_BOTTOM_TEXT;
         }
-    else if ( locationSlip->tempPerson && locationSlip->tempPersonKey ) {
-        if ( rightSide ) {
-            arrowPos.x += LOCATION_SLIP_RIGHT_TEXT/2;
+    else if ( locationSlip->tempPerson ) {
+        const char* personLabel = NULL;
+        char personName[5];
+        memset(personName, 0, 5);
+        LiveObject* person = getLiveObject( locationSlip->personID );
+
+        if( locationSlip->tempPersonKey != NULL ){
+            personLabel = translate( locationSlip->tempPersonKey );
             }
-        else {
-            arrowPos.y -= LOCATION_SLIP_BOTTOM_TEXT/2;
+        else if (person != NULL && person->name != NULL ) {
+            strncpy(personName, person->name, 4);
+            personLabel = personName;
             }
 
-        setDrawColor( 0, 0, 0, 1 );
-        pencilFont->drawString( translate( locationSlip->tempPersonKey ), 
-                                arrowPos, alignCenter );
+        if( personLabel != NULL ) {
+            if ( rightSide ) {
+                arrowPos.x += LOCATION_SLIP_RIGHT_TEXT/2;
+                }
+            else {
+                arrowPos.y -= LOCATION_SLIP_BOTTOM_TEXT/2;
+                }
 
-        if ( rightSide ) {
-            arrowPos.x += LOCATION_SLIP_RIGHT_TEXT/2;
-            }
-        else {
-            arrowPos.y -= LOCATION_SLIP_BOTTOM_TEXT/2;
+            setDrawColor( 0, 0, 0, 1 );
+            pencilFont->drawString( personLabel,
+                                    arrowPos, alignCenter );
+
+            if ( rightSide ) {
+                arrowPos.x += LOCATION_SLIP_RIGHT_TEXT/2;
+                }
+            else {
+                arrowPos.y -= LOCATION_SLIP_BOTTOM_TEXT/2;
+                }
             }
         }
 
@@ -14590,10 +14636,14 @@ void LivingLifePage::step() {
             char home =
                 ! locationSlip->temporary &&
                 ! locationSlip->ancient;
-            if ( home ) homeSlips++;
+            if( home ) homeSlips++;
             char tempLabel =
                 locationSlip->tempPerson &&
                 locationSlip->tempPersonKey;
+            if( locationSlip->tempPerson ) {
+                LiveObject* person = getLiveObject( locationSlip->personID );
+                if( person && person->name ) tempLabel = true;
+                }
             locationSlip->labeled = home && homeSlips == 1;
             char expired =
                 locationSlip->temporary &&
@@ -26662,6 +26712,22 @@ void LivingLifePage::playerUnmark() {
     }
 
 
+void LivingLifePage::playerTrack() {
+    PersonHitRecord p;
+    checkForPersonHit(p);
+    if( p.targetID > 0 ) {
+        LiveObject* target = getLiveObject( p.targetID );
+        if( target ) {
+            addTempLocationSlip(
+                target->xd, target->yd,
+                true, target->id,
+                textBaby,
+                0);
+            }
+        }
+    }
+
+
 void LivingLifePage::pointerDown( float inX, float inY ) {
     lastMouseX = inX;
     lastMouseY = inY;
@@ -28592,7 +28658,7 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
                             
                                 if( filterStringLen > 0 ) {
                                     // not blank
-                                    mHintFilterString = 
+                                    mHintFilterString =
                                         stringDuplicate( trimmedFilterString );
                                     }
                             
@@ -28623,8 +28689,21 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
 
                         if( filterStringLen > 0 ) {
                             // not blank
-                            mObjectSearchString = 
-                                stringDuplicate( trimmedFilterString );
+                            // player search
+                            LiveObject* obj = livingNameMatch( trimmedFilterString );
+                            if( obj ) {
+                                if ( !( obj->xd == 1977 && obj->yd == 1977 ) ) {
+                                    addTempLocationSlip(
+                                        obj->xd, obj->yd,
+                                        true, obj->id,
+                                        textBaby,
+                                        0);
+                                    }
+                                }
+                            else {
+                                mObjectSearchString = 
+                                    stringDuplicate( trimmedFilterString );
+                                }
                             }
 
                         delete [] trimmedFilterString;
@@ -28776,6 +28855,11 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
             keyHandledByKeybind = true;
             }
 
+        if( inASCII == playerTrackKey ) {
+            playerTrack();
+            keyHandledByKeybind = true;
+            }
+
         // inspired by Awbz OneLife+
         if( ( ( openSayFieldOnTypingLower && islower( inASCII ) )
               || ( openSayFieldOnTypingUpper && isupper( inASCII ) )
diff --git a/gameSource/LivingLifePage.h b/gameSource/LivingLifePage.h
index e6226287c..1abae545f 100644
--- a/gameSource/LivingLifePage.h
+++ b/gameSource/LivingLifePage.h
@@ -1053,6 +1053,8 @@ class LivingLifePage : public GamePage, public ActionListener {
         void playerMark();
         void playerUnmark();
 
+        void playerTrack();
+
 
         LiveObject *getOurLiveObject();
         LiveObject *getLiveObject( int inID );
diff --git a/gameSource/settings/playerTrackKey.ini b/gameSource/settings/playerTrackKey.ini
new file mode 100644
index 000000000..718f4d2ff
--- /dev/null
+++ b/gameSource/settings/playerTrackKey.ini
@@ -0,0 +1 @@
+t

diff --git a/gameSource/LivingLifePage.cpp b/gameSource/LivingLifePage.cpp
index f48d9587..02a3d662 100644
--- a/gameSource/LivingLifePage.cpp
+++ b/gameSource/LivingLifePage.cpp
@@ -155,6 +155,10 @@ static char savingSpeechMask = false;
 static char savingSpeechNumber = 1;
 
 
+static unsigned int keyDownGap = 0;
+static char sayCapture[3] = {0,0,0};
+
+
 static double emotDuration = 10;
 
 
@@ -9407,6 +9411,8 @@ void LivingLifePage::step() {
             mouseHeld = true;
             }
         }
+
+    keyDownGap++;
     
     if( mServerSocket == -1 ) {
         serverSocketConnected = false;
@@ -19428,6 +19434,8 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
                 savingSpeechMask = false;
                 savingSpeech = true;
                 }
+            sayCapture[0] = inASCII;
+            keyDownGap = 0;
             break;
         case 'x':
             if( userTwinCode != NULL &&
@@ -19439,6 +19447,8 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
                 setWaiting( false );
                 setSignal( "twinCancel" );
                 }
+            sayCapture[0] = inASCII;
+            keyDownGap = 0;
             break;
         /*
         case 'b':
@@ -19501,12 +19511,16 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
             if( ! mSayField.isFocused() ) {
                 mEKeyDown = true;
                 }
+            sayCapture[0] = inASCII;
+            keyDownGap = 0;
             break;
         case 'z':
         case 'Z':
             if( mUsingSteam && ! mSayField.isFocused() ) {
                 mZKeyDown = true;
                 }
+            sayCapture[0] = inASCII;
+            keyDownGap = 0;
             break;
         case ' ':
             if( ! mSayField.isFocused() ) {
@@ -19740,6 +19754,22 @@ void LivingLifePage::keyDown( unsigned char inASCII ) {
                 TextField::unfocusAll();
                 }
             break;
+        default:
+            // inspired by Awbz OneLife+
+            if( ! mSayField.isFocused()
+                && isalpha( inASCII ) ) {
+                if( keyDownGap < 30 && sayCapture[0] != 0 ) {
+                  sayCapture[1] = inASCII;
+                  sayCapture[2] = 0;
+                } else {
+                  sayCapture[0] = inASCII;
+                  sayCapture[1] = 0;
+                }
+                mSayField.setText( sayCapture );
+                mSayField.focus();
+                sayCapture[0] = 0;
+                }
+            break;
         }
     }
 

diff --git a/gameSource/ExistingAccountPage.cpp b/gameSource/ExistingAccountPage.cpp
index 0c0f36b74..d1a2ba41f 100644
--- a/gameSource/ExistingAccountPage.cpp
+++ b/gameSource/ExistingAccountPage.cpp
@@ -788,6 +788,10 @@ void ExistingAccountPage::draw( doublePair inViewCenter,
         delete [] key;
         delete [] s;
         }
+
+    setDrawColor( 1, 1, 1, 1.0 );
+    doublePair wonlife = { -600, 300 };
+    mainFont->drawString( "WonLife", wonlife, alignLeft );
     
 
 
diff --git a/gameSource/ModUpdateMessagePage.cpp b/gameSource/ModUpdateMessagePage.cpp
new file mode 100644
index 000000000..bc15226f8
--- /dev/null
+++ b/gameSource/ModUpdateMessagePage.cpp
@@ -0,0 +1,126 @@
+#include "ModUpdateMessagePage.h"
+
+#include "minorGems/game/Font.h"
+#include "minorGems/game/game.h"
+
+#include "minorGems/util/stringUtils.h"
+
+#include "message.h"
+
+#include "buttonStyle.h"
+
+
+extern Font *mainFont;
+
+
+
+ModUpdateMessagePage::ModUpdateMessagePage()
+        : mKey( "" ), mSubMessage( NULL ),
+          mUpdateURL( NULL ),
+          mUpdateModButton( mainFont, 0, 0, 
+                       translate( "upgradeMessage" ) ),
+          mPlayAnywayButton( mainFont, 0, 300, 
+                       "PLAY AT YOUR OWN RISK" ),
+          mQuitButton( mainFont, 0, -300, 
+                       translate( "quit" ) ) {
+
+
+    setButtonStyle( &mQuitButton );
+    addComponent( &mQuitButton );
+    
+    mQuitButton.addActionListener( this );
+
+    setButtonStyle( &mUpdateModButton );
+    addComponent( &mUpdateModButton );
+
+    mUpdateModButton.addActionListener( this );
+
+    setButtonStyle( &mPlayAnywayButton );
+    addComponent( &mPlayAnywayButton );
+
+    mPlayAnywayButton.addActionListener( this );
+    }
+
+
+
+ModUpdateMessagePage::~ModUpdateMessagePage() {
+    setSubMessage( NULL );
+    setUpdateURL( NULL );
+    }
+
+
+
+void ModUpdateMessagePage::actionPerformed( GUIComponent *inTarget ) {
+    if( inTarget == &mQuitButton ) {
+        setSignal( "quit" );
+        }
+    else if( inTarget == &mUpdateModButton ) {
+        launchURL( mUpdateURL );
+        setSignal( "quit" );
+        }
+    else if( inTarget == &mPlayAnywayButton ) {
+        setSignal( "back" );
+        }
+    }
+
+
+
+
+void ModUpdateMessagePage::setMessageKey( const char *inKey ) {
+    mKey = inKey;
+    }
+
+
+
+void ModUpdateMessagePage::setSubMessage( const char *inSubMessage ) {
+    if( mSubMessage != NULL ) {
+        delete [] mSubMessage;
+        mSubMessage = NULL;
+        }
+    if( inSubMessage != NULL ) {
+        mSubMessage = stringDuplicate( inSubMessage );
+        }
+    }
+
+
+void ModUpdateMessagePage::setUpdateURL( const char *inUpdateURL ) {
+    if( mUpdateURL != NULL ) {
+        delete [] mUpdateURL;
+        mUpdateURL = NULL;
+        }
+    if( inUpdateURL != NULL ) {
+        mUpdateURL = stringDuplicate( inUpdateURL );
+        }
+    }
+
+
+void ModUpdateMessagePage::makeActive( char inFresh ) {
+    if( !inFresh ) {
+        return;
+        }
+
+    char show = mUpdateURL && ( strcmp( mUpdateURL, "" ) != 0 )
+        && isURLLaunchSupported();
+    mUpdateModButton.setVisible( show );
+
+    setWaiting( false );
+    }
+
+
+void ModUpdateMessagePage::draw( doublePair inViewCenter, 
+                              double inViewSize ) {
+
+    doublePair labelPos = { 0, 100 };
+
+    
+    drawMessage( translate( mKey ), labelPos, false );
+
+    if( mSubMessage != NULL ) {    
+        labelPos.y -= 200;
+        
+        drawMessage( mSubMessage, labelPos, false );
+        }
+    
+    }
+
+
diff --git a/gameSource/ModUpdateMessagePage.h b/gameSource/ModUpdateMessagePage.h
new file mode 100644
index 000000000..a0d2d2fa5
--- /dev/null
+++ b/gameSource/ModUpdateMessagePage.h
@@ -0,0 +1,47 @@
+#include "GamePage.h"
+
+#include "minorGems/ui/event/ActionListener.h"
+
+#include "TextButton.h"
+
+
+class ModUpdateMessagePage : public GamePage, ActionListener {
+        
+    public:
+
+        ModUpdateMessagePage();
+        
+        ~ModUpdateMessagePage();
+
+
+        virtual void actionPerformed( GUIComponent *inTarget );
+
+        
+        // must be a string literal
+        void setMessageKey( const char *inKey );
+
+        // copied internally
+        // set to NULL to clear
+        void setSubMessage( const char *inSubMessage );
+
+        // copied internally
+        // set to NULL to clear
+        void setUpdateURL( const char *inUpdateURL );
+
+        virtual void makeActive( char inFresh );
+
+        virtual void draw( doublePair inViewCenter, 
+                           double inViewSize );
+
+    protected:
+        const char *mKey;
+
+        char *mSubMessage;
+        char *mUpdateURL;
+
+        TextButton mUpdateModButton;
+        TextButton mPlayAnywayButton;
+        TextButton mQuitButton;
+        
+    };
+
diff --git a/gameSource/game.cpp b/gameSource/game.cpp
index 568cf8c31..1f6c0b4b3 100644
--- a/gameSource/game.cpp
+++ b/gameSource/game.cpp
@@ -1,5 +1,7 @@
 int versionNumber = 430;
 int dataVersionNumber = 0;
+int clientVersionNumber = versionNumber;
+int expectedVersionNumber = 0;
 
 int binVersionNumber = versionNumber;
 
@@ -7,7 +9,7 @@ int binVersionNumber = versionNumber;
 // Please use this tag to describe your client honestly and uniquely
 // client_official is reserved for the unmodded client
 // do not include whitespace in your tag
-const char *clientTag = "client_official";
+const char *clientTag = "client_wonlife";
 
 
 
@@ -92,6 +94,7 @@ CustomRandomSource randSource( 34957197 );
 
 
 #include "FinalMessagePage.h"
+#include "ModUpdateMessagePage.h"
 #include "LoadingPage.h"
 #include "AutoUpdatePage.h"
 #include "LivingLifePage.h"
@@ -153,6 +156,7 @@ int serverSequenceNumber = 0;
 
 
 FinalMessagePage *finalMessagePage;
+ModUpdateMessagePage *modUpdateMessagePage;
 
 ServerActionPage *getServerAddressPage;
 
@@ -286,12 +290,12 @@ char isNonIntegerScalingAllowed() {
 
 
 const char *getWindowTitle() {
-    return "OneLife";
+    return "WonLife";
     }
 
 
 const char *getAppName() {
-    return "OneLife";
+    return "WonLife";
     }
 
 int getAppVersion() {
@@ -388,6 +392,22 @@ static void updateDataVersionNumber() {
     }
 
 
+// borrowed from awbz/OneLife+
+static void updateExpectedVersionNumber() {
+    File file( NULL, "binary.txt" );
+
+    if( file.exists() ) {
+        char *contents = file.readFileContents();
+        
+        if( contents != NULL ) {
+            sscanf( contents, "v%d", &expectedVersionNumber );
+            }
+
+            delete [] contents;
+        }
+    }
+
+
 
 
 #define SETTINGS_HASH_SALT "another_loss"
@@ -535,6 +555,7 @@ void initFrameDrawer( int inWidth, int inHeight, int inTargetFrameRate,
     initAgeControl();
     
     updateDataVersionNumber();
+    updateExpectedVersionNumber();
 
 
     AppLog::printOutNextMessage();
@@ -716,6 +737,7 @@ void initFrameDrawer( int inWidth, int inHeight, int inTargetFrameRate,
     
 
     finalMessagePage = new FinalMessagePage;
+    modUpdateMessagePage = new ModUpdateMessagePage;
     loadingPage = new LoadingPage;
     
     autoUpdatePage = new AutoUpdatePage;
@@ -834,6 +856,7 @@ void freeFrameDrawer() {
     delete getAHAPVersionPage;
 
     delete finalMessagePage;
+    delete modUpdateMessagePage;
     delete loadingPage;
     delete autoUpdatePage;
     delete autoAHAPUpdatePage;
@@ -2014,8 +2037,24 @@ void drawFrame( char inUpdate ) {
                         autoLogIn = false;
                         }
 
-                    currentGamePage = existingAccountPage;
-                    currentGamePage->base_makeActive( true );
+                    if( clientVersionNumber == expectedVersionNumber ) { 
+                        currentGamePage = existingAccountPage;
+                        currentGamePage->base_makeActive( true );
+                        }
+                    else if( clientVersionNumber > expectedVersionNumber ) {
+                        currentGamePage = modUpdateMessagePage;                        
+                        modUpdateMessagePage->setMessageKey( "upgradeMessage" );
+                        modUpdateMessagePage->setSubMessage( "IT LOOKS LIKE YOU UPDATED WONLIFE##BEFORE DOWNLOADING THE LATEST GAME UPDATE.####USE YOUR UN-MODDED CLIENT TO UPDATE FIRST.##(DON'T FORGET TO CLEAR ANY CUSTOM SERVER SETTINGS!)" );
+                        currentGamePage->base_makeActive( true );
+                        }
+                    else {
+                        currentGamePage = modUpdateMessagePage;                        
+                        modUpdateMessagePage->setMessageKey( "upgradeMessage" );
+                        modUpdateMessagePage->setSubMessage( autoSprintf( "THIS VERSION OF THE WONLLIFE IS OUTDATED##(EXPECTING VERSION %d - RUNNING VERSION %d)##PLEASE DOWNLOAD A NEWER VERSION FROM:####HTTPS://WONDIBLE-COM-WONLIFE.S3.AMAZONAWS.COM/WONLIFE-LATEST.ZIP", expectedVersionNumber, clientVersionNumber ) );
+
+                        modUpdateMessagePage->setUpdateURL( "https://wondible-com-wonlife.s3.amazonaws.com/WonLife-latest.zip" );
+                        currentGamePage->base_makeActive( true );
+                    }
                 }
             }
         else if( currentGamePage == settingsPage ) {
@@ -2558,6 +2597,15 @@ void drawFrame( char inUpdate ) {
                 quitGame();
                 }
             }
+        else if( currentGamePage == modUpdateMessagePage ) {
+            if( modUpdateMessagePage->checkSignal( "quit" ) ) {
+                quitGame();
+                }
+            else if( modUpdateMessagePage->checkSignal( "back" ) ) {
+                currentGamePage = existingAccountPage;
+                currentGamePage->base_makeActive( true );
+                }
+            }
         }
     
 
diff --git a/gameSource/makeFileList b/gameSource/makeFileList
index 30d4f49ef..0849b7c50 100644
--- a/gameSource/makeFileList
+++ b/gameSource/makeFileList
@@ -44,6 +44,7 @@ ExistingAccountPage.cpp \
 KeyEquivalentTextButton.cpp \
 ServerActionPage.cpp \
 FinalMessagePage.cpp \
+ModUpdateMessagePage.cpp \
 AutoUpdatePage.cpp \
 soundBank.cpp \
 convolution.cpp \
